{"version":3,"sources":["components/modifiers/Waveforms.js","modules/sharedControls.js","modules/autoFilter.js","modules/autoWah.js","modules/bitCrusher.js","components/modifiers/Oversample.js","modules/chebyshev.js","modules/chorus.js","modules/compressor.js","modules/distortion.js","modules/eq3.js","modules/feedbackDelay.js","modules/freeverb.js","modules/frequencyShifter.js","modules/gate.js","modules/identity.js","modules/jcReverb.js","modules/phaser.js","modules/pitchShift.js","constants.js","helpers.js","modules/channelSplitter.js","modules/moduleMap.js","broadcast.js","drawImage.js","components/modifiers/Ranges.js","components/ModuleList.js","components/Drawer.js","components/modifiers/Channels.js","components/Module.js","components/Modules.js","App.js","index.js"],"names":["types","Waveforms","value","onChange","Form","Select","map","t","frequency","extend","props","rest","Component","Range","min","max","step","decibel","normal","octave","m","name","modulator","moduleData","Tone","controls","key","display","initial","time","radioOptions","Oversample","id","opt","Check","type","label","checked","target","MIX","SPLIT","channelOrder","scale","number","inMin","inMax","outMin","outMax","suggestedMaxDimension","suggestedScale","width","height","ratio","widthScaleRatio","heightScaleRatio","Math","convertAudioToImage","audioData","imgData","constructor","Float32Array","Error","Uint8ClampedArray","i","length","convertImageToAudio","split1DToChannelCount","arr1D","len","rv","inner","j","dataIndex","push","mergeChannelCountTo1D","arr4d","some","splitRender","actx","lastRender","createNodeCallback","a","data","buffer","createBuffer","sampleRate","buffering","getChannelData","bufferNode","split","connect","merge","node","dry","wet","mix","toDestination","start","sampleRate0","rendered","directRender","renderedBuffer","lastPreview","moduleMap","autoFilter","autoWah","bitCrusher","chebyshev","chorus","compressor","distortion","eq3","feedbackDelay","freeverb","frequencyShifter","gate","identity","jcReverb","phaser","pitchShift","reduce","acc","curr","initData","initSharedState","forEach","c","channelSplitter","bc","BroadcastChannel","sendImageData","preview","postMessage","onmessage","console","log","renderCount","totalRenderTime","debouncedDrawActual","debounce","image","ctx","modules","canvasWidth","xOffset","scaledWidth","scaledHeight","cancel","Date","now","clearRect","hiddenCanvas","document","createElement","hiddenCtx","getContext","drawImage","getImageData","renderAudio","then","updatedData","putImageData","startTime","elapsed","renderTime","averageRenderTime","round","trackRenderingTime","debouncedDrawPreviewImage","drawPreviewImage","canvas","complete","margin","dataURL","toDataURL","tmpLink","download","href","body","appendChild","click","removeChild","module","GenericRange","Label","e","NormalRange","ModuleList","addModule","useState","moduleSearch","setModuleSearch","filteredModules","Object","values","filter","toLowerCase","includes","Card","className","Title","Control","size","placeholder","Button","variant","onClick","Drawer","setModules","setImage","setScale","prevScale","useRef","canvasRef","selectedFile","files","reader","FileReader","img","Image","onload","event","src","result","readAsDataURL","useEffect","defaultImg","current","style","overflow","ref","fontSize","Group","controlId","accept","JSON","parse","unique","uuid","readAsText","Text","downloadImage","obj","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","remove","downloadObjectAsJSON","formatted","next","Channels","handleChange","channel","disabled","Module","handleDelete","handleMove","baseModule","first","last","htmlFor","Modules","index","nextData","onChangeModule","slice","deleteModule","stride","splice","nextIndex","clamp","moveModule","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6b7e2e1.chunk.js","sourcesContent":["import {\n  Form\n} from 'react-bootstrap'\n\nconst types = [\"sawtooth\",\"sine\",\"square\",\"triangle\",\"sine1\",\"sine2\",\"sine3\",\"sine4\",\"sine5\",\"sine6\",\"sine7\",\"sine8\",\"sine9\",\"sine10\",\"sine11\",\"sine12\",\"sine13\",\"sine14\",\"sine15\",\"sine16\",\"sine17\",\"sine18\",\"sine19\",\"sine20\",\"sine21\",\"sine22\",\"sine23\",\"sine24\",\"sine25\",\"sine26\",\"sine27\",\"sine28\",\"sine29\",\"sine30\",\"sine31\",\"sine32\",\"square1\",\"square2\",\"square3\",\"square4\",\"square5\",\"square6\",\"square7\",\"square8\",\"square9\",\"square10\",\"square11\",\"square12\",\"square13\",\"square14\",\"square15\",\"square16\",\"square17\",\"square18\",\"square19\",\"square20\",\"square21\",\"square22\",\"square23\",\"square24\",\"square25\",\"square26\",\"square27\",\"square28\",\"square29\",\"square30\",\"square31\",\"square32\",\"triangle1\",\"triangle2\",\"triangle3\",\"triangle4\",\"triangle5\",\"triangle6\",\"triangle7\",\"triangle8\",\"triangle9\",\"triangle10\",\"triangle11\",\"triangle12\",\"triangle13\",\"triangle14\",\"triangle15\",\"triangle16\",\"triangle17\",\"triangle18\",\"triangle19\",\"triangle20\",\"triangle21\",\"triangle22\",\"triangle23\",\"triangle24\",\"triangle25\",\"triangle26\",\"triangle27\",\"triangle28\",\"triangle29\",\"triangle30\",\"triangle31\",\"triangle32\",\"sawtooth1\",\"sawtooth2\",\"sawtooth3\",\"sawtooth4\",\"sawtooth5\",\"sawtooth6\",\"sawtooth7\",\"sawtooth8\",\"sawtooth9\",\"sawtooth10\",\"sawtooth11\",\"sawtooth12\",\"sawtooth13\",\"sawtooth14\",\"sawtooth15\",\"sawtooth16\",\"sawtooth17\",\"sawtooth18\",\"sawtooth19\",\"sawtooth20\",\"sawtooth21\",\"sawtooth22\",\"sawtooth23\",\"sawtooth24\",\"sawtooth25\",\"sawtooth26\",\"sawtooth27\",\"sawtooth28\",\"sawtooth29\",\"sawtooth30\",\"sawtooth31\",\"sawtooth32\"]\n\nexport default function Waveforms({ value, onChange }) {\n  return (\n    <Form.Select value={value} onChange={onChange}>\n      {\n        types.map(t => (\n          <option key={t}>{t}</option>\n        ))\n      }\n    </Form.Select>\n  )\n}\n","import { Form } from 'react-bootstrap'\n\nexport function frequency(extend = {}) {\n  const { props, ...rest } = extend\n  return {\n    Component: Form.Range,\n    props: {\n      min: 1,\n      max: 20000,\n      step: 1,\n      ...props\n    },\n    ...rest\n  }\n}\n\nexport function decibel(extend = {}) {\n  const { props, ...rest } = extend\n  return {\n    Component: Form.Range,\n    props: {\n      min: -100,\n      max: 0,\n      step: 1,\n      ...props\n    },\n    ...rest\n  }\n}\n\nexport function normal(extend = {}) {\n  const { props, ...rest } = extend\n  return {\n    Component: Form.Range,\n    props: {\n      min: 0,\n      max: 1,\n      step: 0.0001,\n      ...props\n    },\n    ...rest\n  }\n}\n\nexport function octave(extend = {}) {\n  const { props, ...rest } = extend\n  return {\n    Component: Form.Range,\n    props: {\n      min: 1,\n      max: 10,\n      step: 1,\n      ...props\n    },\n    ...rest\n  }\n}\n\nexport function time(extend = {}) {\n  const { props, ...rest } = extend\n  return {\n    Component: Form.Range,\n    props: {\n      min: 0.001,\n      max: 10,\n      step: 0.001,\n      ...props\n    },\n    ...rest\n  }\n}\n","import * as Tone from 'tone'\nimport Waveforms from '../components/modifiers/Waveforms'\n\nimport {\n  frequency,\n  normal,\n  octave,\n} from './sharedControls'\n\nconst m = {\n  name: 'Auto Filter',\n  modulator(moduleData) {\n    return new Tone.AutoFilter(moduleData)\n  },\n  controls: [\n    {\n      key: 'baseFrequency',\n      display: 'Base Frequency',\n      initial: 0,\n      ...frequency()\n    },\n    {\n      key: 'frequency',\n      display: 'Frequency',\n      initial: 0,\n      ...frequency()\n    },\n    {\n      key: 'depth',\n      display: 'Depth',\n      initial: 1,\n      ...normal()\n    },\n    {\n      key: 'octaves',\n      display: 'Octaves',\n      initial: 0,\n      ...octave()\n    },\n    {\n      key: 'type',\n      display: 'Waveform',\n      initial: \"sawtooth\",\n      Component: Waveforms,\n      props: {},\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nimport {\n  decibel,\n  frequency,\n  normal,\n  octave,\n  time,\n} from './sharedControls'\n\nconst m = {\n  name: 'Auto Wah',\n  modulator(moduleData) {\n    return new Tone.AutoWah(moduleData)\n  },\n  controls: [\n    {\n      key: 'Q',\n      display: 'Q',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 10,\n        step: 0.01,\n      },\n    },\n    {\n      key: 'baseFrequency',\n      display: 'Base Frequency',\n      initial: 0,\n      ...frequency()\n    },\n    {\n      key: 'follower',\n      display: 'Follower',\n      initial: 0.001,\n      ...time()\n    },\n    {\n      key: 'gain',\n      display: 'Gain',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'octaves',\n      display: 'Octaves',\n      initial: 0,\n      ...octave()\n    },\n    {\n      key: 'sensitivity',\n      display: 'Sensitivity',\n      initial: 0,\n      ...decibel()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nconst m = {\n  name: 'Bit Crusher',\n  modulator(moduleData) {\n    return new Tone.BitCrusher(moduleData)\n  },\n  controls: [\n    {\n      key: 'bits',\n      display: 'Bits',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 16,\n        step: 1,\n      },\n    },\n  ]\n}\n\nexport default m\n","import {\n  Form\n} from 'react-bootstrap'\n\nconst radioOptions = [\n  { display: 'No oversampling', value: 'none' },\n  { display: '2x oversampling', value: '2x' },\n  { display: '4x oversampling', value: '4x' },\n]\n\nexport default function Oversample({ value, onChange, id }) {\n  return (\n    <>\n      {\n        radioOptions.map(opt => (\n          <Form.Check key={opt.value}\n            type=\"radio\"\n            id={`${id}-${opt.value}`}\n            label={opt.display}\n            name={`${id}-oversampling`}\n            value={opt.value}\n            checked={opt.value === value}\n            onChange={() => onChange({ target: { value: opt.value }})} />\n        ))\n      }\n    </>\n  )\n}\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\nimport Oversample from '../components/modifiers/Oversample'\n\nconst m = {\n  name: 'Chebyshev',\n  modulator(moduleData) {\n    return new Tone.Chebyshev(moduleData)\n  },\n  controls: [\n    {\n      key: 'order',\n      display: 'Order',\n      initial: 2,\n      Component: Form.Range,\n      props: {\n        min: 2, // blows up on 1 sometimes\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'oversample',\n      display: 'Oversample',\n      initial: 'none',\n      Component: Oversample,\n      props: {},\n    }\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nimport Waveforms from '../components/modifiers/Waveforms'\nimport {\n  normal,\n  frequency,\n} from './sharedControls'\n\nconst m = {\n  name: 'Chorus',\n  modulator(moduleData) {\n    return new Tone.Chorus(moduleData)\n  },\n  controls: [\n    {\n      key: 'delayTime',\n      display: 'Delay Time',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'depth',\n      display: 'Depth',\n      initial: 1,\n      ...normal()\n    },\n    {\n      key: 'feedback',\n      display: 'Feedback',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'frequency',\n      display: 'Frequency',\n      initial: 0,\n      ...frequency()\n    },\n    {\n      key: 'type',\n      display: 'Waveform',\n      initial: \"sawtooth\",\n      Component: Waveforms,\n      props: {},\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\nimport { decibel } from './sharedControls'\n\nconst m = {\n  name: 'Compressor',\n  modulator(moduleData) {\n    return new Tone.Compressor(moduleData)\n  },\n  controls: [\n    {\n      key: 'threshold',\n      display: 'Threshold',\n      initial: 0,\n      ...decibel()\n    },\n    {\n      key: 'ratio',\n      display: 'Ratio',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 10,\n        step: 0.0001,\n      },\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\n\nimport { normal } from './sharedControls'\nimport Oversample from '../components/modifiers/Oversample'\n\nconst m = {\n  name: 'Distortion',\n  modulator(moduleData) {\n    return new Tone.Distortion(moduleData)\n  },\n  controls: [\n    {\n      key: 'distortion',\n      display: 'Distortion',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'oversample',\n      display: 'Oversample',\n      initial: 'none',\n      Component: Oversample,\n      props: {},\n    }\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\n\nimport {\n  frequency,\n  decibel\n} from './sharedControls'\n\nconst m = {\n  name: 'EQ',\n  modulator(moduleData) {\n    return new Tone.EQ3(moduleData)\n  },\n  controls: [\n    {\n      key: 'highFrequency',\n      display: 'High Frequency',\n      initial: 20000,\n      ...frequency()\n    },\n    {\n      key: 'high',\n      display: 'High',\n      initial: 0,\n      ...decibel()\n    },\n    {\n      key: 'mid',\n      display: 'Mid',\n      initial: 0,\n      ...decibel()\n    },\n    {\n      key: 'low',\n      display: 'Low',\n      initial: 0,\n      ...decibel()\n    },\n    {\n      key: 'lowFrequency',\n      display: 'Low Frequency',\n      initial: 0,\n      ...frequency()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\n\nimport { normal } from './sharedControls'\n\nconst m = {\n  name: 'Feedback Delay',\n  modulator(moduleData) {\n    return new Tone.FeedbackDelay(moduleData)\n  },\n  controls: [\n    {\n      key: 'delayTime',\n      display: 'Delay Time',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'feedback',\n      display: 'Feedback',\n      initial: 0,\n      ...normal()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\n\nimport {\n  frequency,\n  normal\n} from './sharedControls'\n\nconst m = {\n  name: 'Freeverb',\n  modulator(moduleData) {\n    return new Tone.Freeverb(moduleData)\n  },\n  controls: [\n    {\n      key: 'roomSize',\n      display: 'Room Size',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'dampening',\n      display: 'Dampening',\n      initial: 1,\n      ...frequency()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { frequency } from './sharedControls'\n\nconst m = {\n  name: 'Frequency Shifter',\n  modulator(moduleData) {\n    return new Tone.FrequencyShifter(moduleData)\n  },\n  controls: [\n    {\n      key: 'frequency',\n      display: 'Frequency',\n      initial: 1,\n      ...frequency()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\nimport { decibel } from './sharedControls'\n\nconst m = {\n  name: 'Gate',\n  modulator(moduleData) {\n    return new Tone.Gate(moduleData)\n  },\n  controls: [\n    {\n      key: 'smoothing',\n      display: 'Smoothing',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 0.01,\n        max: 10,\n        step: 0.01,\n      },\n    },\n    {\n      key: 'threshold',\n      display: 'Threshold',\n      initial: 0,\n      ...decibel()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nconst m = {\n  name: 'Gain',\n  modulator(moduleData) {\n    return new Tone.Gain(moduleData)\n  },\n  controls: [\n    {\n      key: 'gain',\n      display: 'Gain',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 0.01,\n        max: 4,\n        step: 0.01,\n      },\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\n\nimport {\n  normal\n} from './sharedControls'\n\nconst m = {\n  name: 'JC Reverb',\n  modulator(moduleData) {\n    return new Tone.JCReverb(moduleData)\n  },\n  controls: [\n    {\n      key: 'roomSize',\n      display: 'Room Size',\n      initial: 0,\n      ...normal()\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nimport {\n  frequency,\n  octave\n} from './sharedControls'\n\nconst m = {\n  name: 'Phaser',\n  modulator(moduleData) {\n    return new Tone.Phaser(moduleData)\n  },\n  controls: [\n    {\n      key: 'frequency',\n      display: 'Frequency',\n      initial: 1,\n      ...frequency()\n    },\n    {\n      key: 'baseFrequency',\n      display: 'Base Frequency',\n      initial: 1,\n      ...frequency()\n    },\n    {\n      key: 'octaves',\n      display: 'Octaves',\n      initial: 1,\n      ...octave()\n    },\n    {\n      key: 'Q',\n      display: 'Q',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 10,\n        step: 0.01,\n      },\n    },\n    {\n      key: 'stages',\n      display: 'Stages',\n      initial: 1,\n      Component: Form.Range,\n      props: {\n        min: 1,\n        max: 10,\n        step: 0.01,\n      },\n    },\n  ]\n}\n\nexport default m\n","import * as Tone from 'tone'\nimport { Form } from 'react-bootstrap'\n\nimport { normal } from './sharedControls'\n\nconst m = {\n  name: 'Pitch Shift',\n  modulator(moduleData) {\n    return new Tone.PitchShift(moduleData)\n  },\n  controls: [\n    {\n      key: 'delayTime',\n      display: 'Delay Time',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'feedback',\n      display: 'Feedback',\n      initial: 0,\n      ...normal()\n    },\n    {\n      key: 'pitch',\n      display: 'Pitch',\n      initial: 0,\n      Component: Form.Range,\n      props: {\n        min: 0,\n        max: 24,\n        step: 0.01,\n      },\n    },\n    {\n      key: 'windowSize',\n      display: 'Window Size',\n      initial: 0.01,\n      Component: Form.Range,\n      props: {\n        min: 0.01,\n        max: 10,\n        step: 0.01,\n      },\n    },\n  ]\n}\n\nexport default m\n","export const channelCount = 4 // r, g, b, a\n\nexport const MIX = 'MIX'\nexport const SPLIT = 'SPLIT'\nexport const R = 'R'\nexport const G = 'G'\nexport const B = 'B'\nexport const A = 'A'\n\nexport const channelOrder = [\n  { key: R, display: 'Red' },\n  { key: G, display: 'Green' },\n  { key: B, display: 'Blue' },\n  { key: A, display: 'Alpha' },\n]\n\nexport function initSharedState() {\n  return {\n    [SPLIT]: false,\n    [R]: true,\n    [G]: true,\n    [B]: true,\n    [A]: true,\n    [MIX]: 1,\n  }\n}\n","import { channelCount } from './constants'\n\nexport function scale (number, inMin, inMax, outMin, outMax) {\n  return (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n}\n\nconst suggestedMaxDimension = 250\nexport function suggestedScale(width, height) {\n  let ratio = 1\n  if (width > suggestedMaxDimension || height > suggestedMaxDimension) {\n    const widthScaleRatio = suggestedMaxDimension / width\n    const heightScaleRatio = suggestedMaxDimension / height\n    ratio = Math.min(widthScaleRatio, heightScaleRatio)\n  }\n  return ratio\n}\n\n// mutates original image data\nexport function convertAudioToImage(audioData, imgData) {\n  if (audioData.constructor !== Float32Array) {\n    throw new Error(`audio data incorrect type`)\n  }\n\n  if (imgData.constructor !== Uint8ClampedArray) {\n    throw new Error(`img data incorrect type`)\n  }\n\n  for (let i = 0; i < audioData.length; i++) {\n    imgData[i] = scale(audioData[i], -1, 1, 0, 255)\n  }\n}\n\nexport function convertImageToAudio(imgData) {\n  if (imgData.constructor !== Uint8ClampedArray) {\n    throw new Error(`img data incorrect type`)\n  }\n\n  const audioData = new Float32Array(imgData.length)\n  for (let i = 0; i < imgData.length; i++) {\n    audioData[i] = scale(imgData[i], 0, 255, -1, 1)\n  }\n  return audioData\n}\n\nexport function split1DToChannelCount(arr1D) {\n  if (arr1D.constructor !== Float32Array) {\n    throw new Error(`audio data incorrect type`)\n  }\n\n  const len = arr1D.length / channelCount\n  const rv = []\n\n  for (let i = 0; i < channelCount; i++) {\n    const inner = new Float32Array(len)\n    for (let j = 0; j < len; j++) {\n      const dataIndex = i + (j * channelCount)\n      inner[j] = arr1D[dataIndex]\n    }\n    rv.push(inner)\n  }\n\n  return rv\n}\n\nexport function mergeChannelCountTo1D(arr4d) {\n  if (arr4d.some(inner => inner.constructor !== Float32Array)) {\n    throw new Error(`audio data incorrect type`)\n  }\n\n  const rv = new Float32Array(arr4d[0].length * channelCount)\n\n  for (let i = 0; i < channelCount; i++) {\n    for (let j = 0; j < arr4d[i].length; j++) {\n      const index = i + (j * channelCount)\n      rv[index] = arr4d[i][j]\n    }\n  }\n\n  return rv\n}\n\nexport function downloadObjectAsJSON(obj) {\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj))\n  const downloadAnchorNode = document.createElement('a')\n  downloadAnchorNode.setAttribute('href', dataStr)\n  downloadAnchorNode.setAttribute('download', `patch-${Date.now()}.json`)\n  document.body.appendChild(downloadAnchorNode)\n  downloadAnchorNode.click()\n  downloadAnchorNode.remove()\n}\n","import * as Tone from 'tone'\nimport {\n  split1DToChannelCount,\n  mergeChannelCountTo1D\n} from '../helpers'\nimport {\n  channelCount,\n  channelOrder,\n  MIX,\n  SPLIT,\n} from '../constants'\n\nasync function splitRender(actx, lastRender, moduleData, createNodeCallback) {\n  const rendered = await Tone.Offline(() => {\n    const data = split1DToChannelCount(lastRender)\n    const buffer = actx.createBuffer(channelCount, lastRender.length / channelCount, actx.sampleRate)\n  \n    for (let i = 0; i < data.length; i++) {\n      const inner = data[i]\n      const buffering = buffer.getChannelData(i)\n      for (let j = 0; j < inner.length; j++) {\n        buffering[j] = inner[j]\n      }\n    }\n\n    const bufferNode = new Tone.ToneBufferSource(buffer)\n\n    const split = new Tone.Split(4)\n    bufferNode.connect(split)\n    const merge = new Tone.Merge(4)\n  \n    for (let i = 0; i < channelOrder.length; i++) {\n      if (moduleData[channelOrder[i].key]) {\n        const node = createNodeCallback()\n        split.connect(node, i, 0)\n        node.connect(merge, 0, i)\n      } else {\n        split.connect(merge, i, i)\n      }\n    }\n\n    const dry = new Tone.Gain(1 - moduleData[MIX])\n    const wet = new Tone.Gain(moduleData[MIX])\n    const mix = new Tone.Gain(1)\n    bufferNode.connect(dry)\n    merge.connect(wet)\n    dry.connect(mix)\n    wet.connect(mix)\n    mix.toDestination()\n\n    bufferNode.start()\n  }, lastRender.length / actx.sampleRate / channelCount, channelCount, actx.sampleRate0)\n\n  return rendered\n}\n\nasync function directRender(actx, lastRender, moduleData, createNodeCallback) {\n  const rendered = await Tone.Offline(() => {\n    const buffer = actx.createBuffer(1, lastRender.length, actx.sampleRate)\n    const buffering = buffer.getChannelData(0)\n\n    for (let i = 0; i < lastRender.length; i++) {\n      buffering[i] = lastRender[i]\n    }\n\n    const bufferNode = new Tone.ToneBufferSource(buffer)\n    const node = createNodeCallback()\n    bufferNode.connect(node)\n\n    const dry = new Tone.Gain(1 - moduleData[MIX])\n    const wet = new Tone.Gain(moduleData[MIX])\n    const mix = new Tone.Gain(1)\n    bufferNode.connect(dry)\n    node.connect(wet)\n    dry.connect(mix)\n    wet.connect(mix)\n    mix.toDestination()\n\n    bufferNode.start()\n  }, lastRender.length / actx.sampleRate, 1, actx.sampleRate)\n\n  return rendered\n}\n\nexport default async function channelSplitter(lastRender, moduleData, createNodeCallback) {\n  if (lastRender.constructor !== Float32Array) {\n    throw new Error(`audio data incorrect type`)\n  }\n\n  const actx = Tone.getContext()\n  let rv\n\n  // Split path\n  if (moduleData[SPLIT]) {\n    let renderedBuffer = await splitRender(actx, lastRender, moduleData, createNodeCallback)\n    const arr4d = []\n    for (let i = 0; i < channelCount; i++) {\n      arr4d[i] = renderedBuffer.getChannelData(i)\n    }\n    rv = mergeChannelCountTo1D(arr4d)\n  }\n  \n  // Unsplit path\n  else {\n    let renderedBuffer = await directRender(actx, lastRender, moduleData, createNodeCallback)\n    rv = renderedBuffer.getChannelData(0)\n  }\n\n  return rv\n}\n","import autoFilter from './autoFilter'\nimport autoWah from './autoWah'\nimport bitCrusher from './bitCrusher'\nimport chebyshev from './chebyshev'\nimport chorus from './chorus'\nimport compressor from './compressor'\nimport distortion from './distortion'\nimport eq3 from './eq3'\nimport feedbackDelay from './feedbackDelay'\nimport freeverb from './freeverb'\nimport frequencyShifter from './frequencyShifter'\nimport gate from './gate'\nimport identity from './identity'\nimport jcReverb from './jcReverb'\nimport phaser from './phaser'\nimport pitchShift from './pitchShift'\n// import reverb from './reverb'\n\nimport { initSharedState } from '../constants'\nimport channelSplitter from './channelSplitter'\n\nconst moduleMap = [\n  autoFilter,\n  autoWah,\n  bitCrusher,\n  chebyshev,\n  chorus,\n  compressor,\n  distortion,\n  eq3,\n  feedbackDelay,\n  freeverb,\n  frequencyShifter,\n  gate,\n  identity,\n  jcReverb,\n  phaser,\n  pitchShift,\n  // reverb, #todo, reverb bugs out right now\n].reduce((acc, curr) => {\n  const key = `MODULE_${curr.name}`\n  acc[key] = {\n    ...curr,\n    key,\n    initData() {\n      let data = initSharedState()\n      curr.controls.forEach(c => {\n        data[c.key] = c.initial\n      })\n      return data\n    },\n    modulator(lastRender, moduleData) {\n      return channelSplitter(lastRender, moduleData, () => {\n        return curr.modulator(moduleData)\n      })\n    }\n  }  \n  return acc\n}, {})\n\nexport default moduleMap\n","const bc = new BroadcastChannel('image-update')\n\nlet lastRender\nlet lastPreview\n\nexport function sendImageData(imgData, width, height, preview) {\n  const data = {\n    preview,\n    width,\n    height,\n    imgData\n  }\n\n  if (preview) {\n    lastPreview = data\n  } else {\n    lastRender = data\n  }\n\n  bc.postMessage(data)\n}\n\nbc.onmessage = ({ data }) => {\n  console.log(data)\n  if (data && data.type === 'subscribe') {\n    bc.postMessage(lastRender)\n    bc.postMessage(lastPreview)\n  }\n}\n","import moduleMap from './modules/moduleMap'\nimport { sendImageData } from './broadcast'\nimport {\n  convertAudioToImage,\n  convertImageToAudio\n} from './helpers'\nimport { debounce } from 'lodash'\n\nlet renderCount = 0\nlet totalRenderTime = 0\nfunction trackRenderingTime(startTime) {\n  const endTime = Date.now()\n  const elapsed = endTime - startTime\n  renderCount++\n  totalRenderTime += elapsed\n  console.log({\n    renderTime: elapsed,\n    averageRenderTime: Math.round(totalRenderTime / renderCount)\n  })\n}\n\nconst margin = 4\nconst previews = 3\nconst debouncedDrawActual = debounce(drawActual, 1000)\nfunction drawActual({\n  image,\n  ctx,\n  modules,\n  canvasWidth,\n  xOffset,\n  scaledWidth,\n  scaledHeight\n}) {\n  debouncedDrawActual?.cancel?.()\n\n  const start = Date.now()\n  ctx.clearRect(xOffset, 0, xOffset + scaledWidth, scaledHeight)\n\n  const { width, height } = image\n  const hiddenCanvas = document.createElement('canvas')\n  hiddenCanvas.width = width\n  hiddenCanvas.height = height\n  const hiddenCtx = hiddenCanvas.getContext('2d')\n  hiddenCtx.drawImage(image, 0, 0)\n  const imgData = hiddenCtx.getImageData(0, 0, width, height)\n  const data = imgData.data\n\n  return renderAudio(data, modules)\n    .then(updatedData => {\n      convertAudioToImage(updatedData, data)\n      hiddenCtx.putImageData(imgData, 0, 0)\n      ctx.drawImage(hiddenCanvas, xOffset, 0, scaledWidth, scaledHeight)\n      \n      const updated = ctx.getImageData(0, 0, canvasWidth, scaledHeight)\n      sendImageData(updated, canvasWidth, scaledHeight, true)\n      sendImageData(imgData, width, height, false)\n      trackRenderingTime(start)\n    })\n}\n\nexport const debouncedDrawPreviewImage = debounce(drawPreviewImage, 1000)\nexport async function drawPreviewImage(image, canvas, modules, scale) {\n  debouncedDrawPreviewImage?.cancel?.()\n  \n  if (!image.complete) return\n\n  const ctx = canvas.getContext('2d')\n\n  const { width, height } = image\n  const scaledWidth = width * scale\n  const scaledHeight = height * scale\n\n  const canvasWidth = (scaledWidth * previews) + (margin * previews - 1)\n  canvas.width = canvasWidth\n  canvas.height = scaledHeight\n  ctx.clearRect(0, 0, canvasWidth, scaledHeight)\n\n  ctx.drawImage(image, 0, 0, scaledWidth, scaledHeight)\n  const imgData = ctx.getImageData(0, 0, scaledWidth, scaledHeight)\n  const data = imgData.data\n\n\n  const updatedData = await renderAudio(data, modules)\n\n  convertAudioToImage(updatedData, data)\n  ctx.putImageData(imgData, scaledWidth + margin, 0)\n\n  let updated = ctx.getImageData(0, 0, canvasWidth, scaledHeight)\n  sendImageData(updated, canvasWidth, scaledHeight, true)\n\n  debouncedDrawActual({\n    image,\n    ctx,\n    modules,\n    canvasWidth,\n    xOffset: (scaledWidth * 2) + (margin * 2),\n    scaledWidth,\n    scaledHeight\n  })\n}\n\nexport async function downloadImage(image, modules) {\n  const { width, height } = image\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  canvas.width = width\n  canvas.height = height\n\n  ctx.drawImage(image, 0, 0)\n  const imgData = ctx.getImageData(0, 0, width, height)\n  const data = imgData.data\n\n  const updatedData = await renderAudio(data, modules)\n\n  convertAudioToImage(updatedData, data)\n  ctx.putImageData(imgData, 0, 0)\n\n  const dataURL = canvas.toDataURL()\n  \n  var tmpLink = document.createElement('a')\n  tmpLink.download = `bent-${Date.now()}.png`\n  tmpLink.href = dataURL;  \n\n  document.body.appendChild(tmpLink)\n  tmpLink.click()\n  document.body.removeChild(tmpLink)\n}\n\nasync function renderAudio(data, modules) {\n  let rendered = convertImageToAudio(data)\n  for (let module of modules) {\n    rendered = await moduleMap[module.type].modulator(rendered, module.data)\n  }\n  return rendered\n}\n","import {\n  Form\n} from 'react-bootstrap'\n\nexport function GenericRange({\n  label,\n  onChange,\n  ...props\n}) {\n  return (\n    <>\n      <Form.Label>\n        {label}\n        <Form.Range onChange={e => onChange(e.target.value)} {...props} />\n      </Form.Label>\n    </>\n  )\n}\n\nexport function NormalRange(props) {\n  return (\n    <GenericRange {...props}\n      min={0}\n      max={1}\n      step={0.0001} />\n  )\n}\n\nexport function DecibelRange(props) {\n  return (\n    <GenericRange {...props}\n      min={-100}\n      max={0}\n      step={1} />\n  )\n}\n\nexport function FrequencyRange(props) {\n  return (\n    <GenericRange {...props}\n      min={20}\n      max={20000}\n      step={1} />\n  )\n}\n","import {\n  useState,\n} from 'react'\nimport {\n  Button,\n  Card,\n  Form\n} from 'react-bootstrap'\nimport moduleMap from '../modules/moduleMap'\n\nexport default function ModuleList({\n  addModule\n}) {\n  const [moduleSearch, setModuleSearch] = useState('')\n\n  const filteredModules = Object.values(moduleMap)\n    .filter(m => m.name.toLowerCase().includes(moduleSearch.toLowerCase()))\n\n  return (\n    <Card className=\"m-3 p-3\">\n      <Card.Title>Add Module</Card.Title>\n      <Form.Control size=\"sm\" value={moduleSearch}\n        placeholder=\"Type to filter modules\"\n        onChange={e => setModuleSearch(e.target.value)}\n        className=\"mb-2\" />\n      <div className=\"my-1 button-row\">\n        {\n          filteredModules.map(m => (\n            <Button variant=\"primary\"\n              key={m.key}\n              onClick={() => addModule(m)}>\n              {m.name}\n            </Button>\n          ))\n        }\n      </div>\n    </Card>\n  )\n}\n","import {\n  useEffect,\n  useState,\n  useRef,\n} from 'react'\nimport {\n  Button,\n  Card,\n  Form\n} from 'react-bootstrap'\nimport { v4 as uuid } from 'uuid'\nimport {\n  drawPreviewImage,\n  debouncedDrawPreviewImage,\n  downloadImage,\n} from '../drawImage'\nimport {\n  suggestedScale,\n  downloadObjectAsJSON,\n} from '../helpers'\nimport { GenericRange } from './modifiers/Ranges'\nimport ModuleList from './ModuleList'\n\nexport default function Drawer({\n  modules,\n  setModules,\n}) {\n  const [image, setImage] = useState()\n  const [scale, setScale] = useState(1)\n  const prevScale = useRef(scale)\n  const canvasRef = useRef()\n\n  function addModule(module) {\n    const formatted = {\n      unique: uuid(),\n      type: module.key,\n      data: module.initData()\n    }\n    const next = [...modules, formatted]\n    setModules(next)\n  }\n\n  useEffect(() => {\n    if (!image) {\n      const defaultImg = new Image()\n      defaultImg.onload = () => {\n        setImage(defaultImg)\n      }\n      defaultImg.src = 'images/fuji.png'\n    }\n  }, [image])\n\n  useEffect(() => {\n    if (image) {\n      if (scale === prevScale.current) {\n        drawPreviewImage(image, canvasRef.current, modules, scale)\n      } else {\n        debouncedDrawPreviewImage(image, canvasRef.current, modules, scale)\n        prevScale.current = scale\n      }\n    }\n  }, [image, modules, scale])\n\n  async function changeImage(e) {\n    const selectedFile = e.target.files[0]\n    const reader = new FileReader()\n\n    const img = new Image()\n\n    img.onload = () => {\n      setScale(suggestedScale(img.width, img.height))\n      setImage(img)\n    }\n    reader.onload = (event) => {\n      img.src = event.target.result\n    }\n    reader.readAsDataURL(selectedFile)\n  }\n\n  function uploadPatch(e) {\n    const selectedFile = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      let result = JSON.parse(event.target.result)\n      // when adding patch to same patch IDs could be the same,\n      // so replacing them with new ones\n      result = result.map(m => ({ ...m, unique: uuid() }))\n      setModules([...modules, ...result])\n    }\n\n    reader.readAsText(selectedFile);\n  }\n\n  return (\n    <div>\n      <Card className=\"m-3 p-3\">\n        <div style={{ overflow: 'auto' }} className=\"mb-2\">\n          <div style={{ display: 'inline-block' }}>\n            <canvas ref={canvasRef} />\n            <div className=\"d-flex justify-content-around\" style={{ fontSize: '0.75em' }}>\n              <span>Original</span>\n              <span>Quick Render</span>\n              <span>Actual Render</span>\n            </div>\n          </div>\n        </div>\n        <GenericRange value={scale}\n          onChange={setScale}\n          min={0.1}\n          max={2}\n          step={0.01}\n          label=\"Scale Preview\" />\n        <a href=\"/display.html\" target=\"_blank\">Open preview in new tab</a>\n        <Form.Group controlId=\"upload-image\" className=\"my-3\">\n          <Form.Label className=\"d-block\">\n            Upload image\n            <Form.Control size=\"sm\" type=\"file\" accept=\"image/*\" onChange={changeImage} />\n          </Form.Label>\n        </Form.Group>\n        <Form.Group controlId=\"upload-image\" className=\"mb-3\">\n          <Form.Label className=\"d-block\">\n            Upload patch\n            <Form.Control size=\"sm\" type=\"file\" accept=\".json\" onChange={uploadPatch} />\n            {\n              !!modules.length && (\n                <Form.Text className=\"text-info\">\n                  Uploaded patch will be appended to current patch\n                </Form.Text>\n              )\n            }\n          </Form.Label>\n        </Form.Group>\n        <div className=\"my-1 button-row\">\n          <Button onClick={() => downloadImage(image, modules)}>Download Bent Image</Button>\n          <Button onClick={() => downloadObjectAsJSON(modules)}>Download Patch</Button>\n          <Button variant=\"danger\" onClick={() => setModules([])}>Delete Patch</Button>\n        </div>\n      </Card>\n\n      <ModuleList addModule={addModule} />\n    </div>\n  )\n}\n","import { Form } from 'react-bootstrap'\nimport {\n  channelOrder,\n  SPLIT,\n} from '../../constants'\n\nexport default function Channels({\n  moduleData,\n  onChange,\n  unique\n}) {\n  function handleChange(key) {\n    const next = {\n      ...moduleData,\n      [key]: !moduleData[key]\n    }\n    onChange(next)\n  }\n\n  return (\n    <div className=\"my-2\">\n      <div className=\"mt-2 d-flex\">\n        <Form.Check onChange={() => handleChange(SPLIT)}\n          checked={moduleData[SPLIT]}\n          id={`${unique}-split`}\n          type=\"checkbox\"\n          label=\"Split Channels\"\n          className=\"me-3\" />\n\n        {\n          moduleData[SPLIT] && channelOrder.map(channel => (\n            <Form.Check onChange={() => handleChange(channel.key)}\n              checked={moduleData[channel.key]}\n              type=\"checkbox\"\n              label={channel.display}\n              id={`${unique}-${channel.display}`}\n              key={channel.key}\n              disabled={!moduleData[SPLIT]}\n              className=\"me-3\" />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import {\n  Button,\n  Card,\n  Form,\n} from 'react-bootstrap'\nimport Channels from './modifiers/Channels'\nimport {\n  NormalRange\n} from './modifiers/Ranges'\nimport {\n  MIX\n} from '../constants'\n\nexport default function Module({\n  handleDelete,\n  handleMove,\n  baseModule,\n  moduleData,\n  onChange,\n  unique,\n  first,\n  last,\n}) {\n  const { name, controls } = baseModule\n  const { [MIX]: mix } = moduleData\n\n  return (\n    <Card className=\"m-3 p-3\">\n      <Card.Title>{name}</Card.Title>\n\n      <>\n        {\n          controls.map(({\n            key,\n            display,\n            Component,\n            props,\n          }) => (\n            <div key={key} className=\"mb-2\">\n              <Form.Label htmlFor={`${unique}-${key}`}\n                className=\"mb-0\">\n                {display}\n              </Form.Label>\n              <Component value={moduleData[key]}\n                onChange={e => onChange({ ...moduleData, [key]: e.target.value })}\n                id={`${unique}-${key}`}\n                {...props} />\n            </div>\n          ))\n        }\n      </>\n\n      <NormalRange value={mix}\n        onChange={m => onChange({ ...moduleData, [MIX]: m })}\n        label=\"Mix\" />\n\n      <Channels moduleData={moduleData}\n        onChange={onChange}\n        unique={unique} />\n\n      <div className=\"mt-2 button-row\">\n        <Button size=\"sm\" onClick={() => handleMove(-1)} variant=\"info\" disabled={first}>\n          Move Up\n        </Button>\n        <Button size=\"sm\" onClick={() => handleMove(1)} variant=\"info\" disabled={last}>\n          Move Down\n        </Button>\n        <Button size=\"sm\" onClick={handleDelete} variant=\"danger\">\n          Delete\n        </Button>\n      </div>\n    </Card>\n  )\n}\n","import {\n  clamp\n} from 'lodash'\n\nimport Module from './Module'\nimport moduleMap from '../modules/moduleMap'\n\nexport default function Modules({\n  modules,\n  setModules\n}) {\n  function onChangeModule(index, nextData) {\n    const next = [...modules]\n    next[index].data = nextData\n    setModules(next)\n  }\n\n  function deleteModule(index) {\n    const next = [\n      ...modules.slice(0, index),\n      ...modules.slice(index + 1)\n    ]\n    setModules(next)\n  }\n\n  function moveModule(index, stride) {\n    let next = [...modules]\n    const module = next.splice(index, 1)[0]\n    const nextIndex = clamp(index + stride, 0, modules.length - 1)\n    next = [\n      ...next.slice(0, nextIndex),\n      module,\n      ...next.slice(nextIndex)\n    ]\n    setModules(next)\n  }\n\n  return (\n    <div>\n      {\n        modules.map(({ unique, type, data }, i) => {\n          return (\n            <Module baseModule={moduleMap[type]}\n              onChange={next => onChangeModule(i, next)}\n              moduleData={data}\n              handleDelete={() => deleteModule(i)}\n              handleMove={stride => moveModule(i, stride)}\n              unique={unique}\n              key={unique}\n              first={i === 0}\n              last={i === modules.length - 1} />\n          )\n        })\n      }\n    </div>\n  )\n}\n","import {\n  useState,\n} from 'react'\n\nimport './App.css'\nimport Drawer from './components/Drawer'\nimport Modules from './components/Modules'\n\nfunction App() {\n  const [modules, setModules] = useState([])\n\n  return (\n    <div className=\"app\">\n      <Drawer modules={modules} setModules={setModules} />\n      <Modules modules={modules} setModules={setModules} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}